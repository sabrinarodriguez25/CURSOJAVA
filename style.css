<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>Tienda virtual</title>
  <link href="style.css" rel="stylesheet">
</head>

<body>
  <div class="encabezado">
    <a href="carritodecompra.html" id="carritoIcono" onmouseover="mostrarModal()" onmouseout="cerrarModal()">
      <img src="shoppingcart1_114878.png" style="margin-top: 15px; width: 40px;">
    </a>
    <!-- Ventana modal -->
    <div id="modal" class="modal">
      <div id="modal-content">
        <span class="close" onclick="cerrarModal()">&times;</span>
        <h3>Carrito de Compras</h3>
        <ul id="carritoModalLista"></ul>
        <div id="total"></div>
        <button onclick="vaciarCarrito()">Vaciar Carrito</button>
      </div>
    </div>
  </div>

  <div class="contenedor"></div>

  <script>
  
  const modal = document.getElementById("modal");
    function mostrarModal() {
      const carritoModalLista = document.getElementById("carritoModalLista");
      carritoModalLista.innerHTML = ""; // Limpiar la lista modal

      // Obtén el carrito desde localStorage
      const carrito = JSON.parse(localStorage.getItem("carrito"));

      if (carrito && carrito.length > 0) {
        // Recorre los productos en el carrito y muestra cada uno en la lista modal
        carrito.forEach((product) => {
          const listItem = document.createElement("li");
          listItem.textContent = `${product.title} - Cantidad: ${product.quantity}`;
          carritoModalLista.appendChild(listItem);
        });
      } else {
        // Si el carrito está vacío, muestra un mensaje en la lista modal
        const emptyMessage = document.createElement("p");
        emptyMessage.textContent = "El carrito está vacío.";
        carritoModalLista.appendChild(emptyMessage);
      }

      // Muestra la ventana modal
      modal.style.display = "block";
    }

    function cerrarModal() {
      const modal = document.getElementById("modal");
      modal.style.display = "none";
    }

    function vaciarCarrito() {
      // Vaciar el carrito en localStorage
      localStorage.removeItem("carrito");

      cerrarModal();

     
    }

      




    document.addEventListener("DOMContentLoaded", async () => {
      const contenedor = document.querySelector(".contenedor");
      const products = await obtenerProductos();

      let productos = "";
      products.test.forEach((product) => {
        localStorage.setItem(`product_${product.id}`, JSON.stringify(product));
        productos += `
          <div class="card" style="width: 18rem;">
            <img src="${product.image}" style="width: 100px" class="card-img-top" alt="...">
            <div class="card-body">
              <h5 class="card-text">${product.title}</h5>
              <p class="card-text">${product.price}</p>
              <a href="detalleproducto.html?id=${product.id}" class="btn btn-primary">Ver Detalle</a>
            </div>
          </div>
        `;
      });

      contenedor.innerHTML = productos; // Agrega el contenido al elemento con la clase "contenedor"
    });

    // Función para obtener datos de la API ficticia
    async function obtenerProductos() {
      try {
        const response = await fetch('https://fakestoreapi.sabrinarodrig16.repl.co/products');
        if (!response.ok) {
          throw new Error('Error en la solicitud');
        }
        const data = await response.json();
        return data;
      } catch (error) {
        console.error('Error:', error);
        return [];
      }
    }

    // Función para agregar productos al carrito
    function agregarAlCarrito(productId) {
      const product = JSON.parse(localStorage.getItem(`product_${productId}`));

      // Obtén el carrito desde localStorage
      let carrito = JSON.parse(localStorage.getItem("carrito")) || [];

      // Verifica si el producto ya está en el carrito
      const existingProduct = carrito.find((item) => item.id === productId);

      if (existingProduct) {
        // Si el producto ya está en el carrito, aumenta la cantidad
        existingProduct.quantity += 1;
      } else {
        // Si el producto no está en el carrito, agrégalo con cantidad 1
        carrito.push({ id: productId, title: product.title, quantity: 1 });
      }

      // Guarda el carrito actualizado en localStorage
      localStorage.setItem("carrito", JSON.stringify(carrito));

      // Muestra la ventana modal al agregar un producto
      mostrarModal();
    }
  </script>
</body>
</html>

